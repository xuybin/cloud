buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${System.properties['springBootVersion']}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${System.properties['kotlinVersion']}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${System.properties['kotlinVersion']}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'people.data.cloud'
version = '1.0.0'
sourceCompatibility = "${System.properties['javaVersion']}"
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "${System.properties['javaVersion']}"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "${System.properties['javaVersion']}"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile('org.springframework.cloud:spring-cloud-bus')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
	compile('org.springframework.cloud:spring-cloud-starter-zipkin')
	compile('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${System.properties['springCloudVersion']}"
	}
}
